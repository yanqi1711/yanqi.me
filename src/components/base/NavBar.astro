---
import LogoButton from '~/components/widgets/LogoButton.astro'
import SearchSwitch from '~/components/widgets/SearchSwitch.astro'
import ThemeSwitch from '~/components/widgets/ThemeSwitch.astro'
import RssLink from '~/components/widgets/RssLink.astro'
import NavItem from '~/components/base/NavItem.astro'
import NavSwitch from '~/components/widgets/NavSwitch.astro'

import { UI } from '~/config'
import { validateNavBarLayout } from '~/utils/common'

const { navBarLayout, internalNavs, socialLinks } = UI
const { left, right, mergeOnMobile } = navBarLayout

validateNavBarLayout(navBarLayout)
---

<header
  class={`flex items-center gap-6 p-8 ${mergeOnMobile ? 'lt-md:px-7' : 'lt-md:(px-6 gap-3)'}`}
>
  <LogoButton />
  <nav
    class={`flex items-center gap-4.8 w-full lt-md:justify-end
    ${left.length !== 0 ? (right.length !== 0 ? 'justify-between' : '') : 'justify-end'}`}
    aria-label="Main menu"
  >
    {
      mergeOnMobile ? (
        <>
          {left.length !== 0 && (
            <div class="grid grid-flow-col gap-4.8 print:op-0">
              {left.map((key) =>
                key === 'searchButton' ? (
                  <SearchSwitch />
                ) : key === 'themeButton' ? (
                  <ThemeSwitch />
                ) : key === 'rssLink' ? (
                  <RssLink class="lt-md:hidden" />
                ) : key === 'internalNavs' ? (
                  internalNavs.map((item) => (
                    <NavItem type="internal" {item} {mergeOnMobile} />
                  ))
                ) : (
                  socialLinks.map((item) => (
                    <NavItem type="social" {item} {mergeOnMobile} />
                  ))
                )
              )}
            </div>
          )}
          {right.length !== 0 && (
            <div
              class={`grid grid-flow-col gap-4.8 print:op-0
              ${!right.includes('themeButton') && !right.includes('searchButton') && 'lt-md:hidden'}`}
            >
              {right.map((key) =>
                key === 'searchButton' ? (
                  <SearchSwitch />
                ) : key === 'themeButton' ? (
                  <ThemeSwitch />
                ) : key === 'rssLink' ? (
                  <RssLink class="lt-md:hidden" />
                ) : key === 'internalNavs' ? (
                  internalNavs.map((item) => (
                    <NavItem type="internal" {item} {mergeOnMobile} />
                  ))
                ) : (
                  socialLinks.map((item) => (
                    <NavItem type="social" {item} {mergeOnMobile} />
                  ))
                )
              )}
            </div>
          )}
          <NavSwitch>
            <Fragment slot="text">
              {internalNavs.length !== 0 &&
                internalNavs.map((item) => (
                  <NavItem
                    type="internal"
                    {item}
                    {mergeOnMobile}
                    mobileItemType="text"
                  />
                ))}
              {socialLinks.length !== 0 &&
                socialLinks.map((item) => (
                  <NavItem
                    type="social"
                    {item}
                    {mergeOnMobile}
                    mobileItemType="text"
                  />
                ))}
            </Fragment>
            <Fragment slot="icon">
              {internalNavs.length !== 0 &&
                internalNavs.map((item) => (
                  <NavItem
                    type="internal"
                    {item}
                    {mergeOnMobile}
                    mobileItemType="icon"
                  />
                ))}
              {socialLinks.length !== 0 &&
                socialLinks.map((item) => (
                  <NavItem
                    type="social"
                    {item}
                    {mergeOnMobile}
                    mobileItemType="icon"
                  />
                ))}
              <RssLink />
            </Fragment>
          </NavSwitch>
        </>
      ) : (
        <>
          {left.length !== 0 && (
            <div class="grid grid-flow-col gap-4.8 lt-md:(gap-3) print:op-0 ">
              {navBarLayout.left.map((key) =>
                key === 'searchButton' ? (
                  <SearchSwitch />
                ) : key === 'themeButton' ? (
                  <ThemeSwitch />
                ) : key === 'rssLink' ? (
                  <RssLink />
                ) : key === 'internalNavs' ? (
                  internalNavs.map((item) => (
                    <NavItem type="internal" {item} {mergeOnMobile} />
                  ))
                ) : (
                  socialLinks.map((item) => (
                    <NavItem type="social" {item} {mergeOnMobile} />
                  ))
                )
              )}
            </div>
          )}
          {right.length !== 0 && (
            <div class="grid grid-flow-col gap-4.8 lt-md:(gap-3) print:op-0">
              {navBarLayout.right.map((key) =>
                key === 'searchButton' ? (
                  <SearchSwitch />
                ) : key === 'themeButton' ? (
                  <ThemeSwitch />
                ) : key === 'rssLink' ? (
                  <RssLink />
                ) : key === 'internalNavs' ? (
                  internalNavs.map((item) => (
                    <NavItem type="internal" {item} {mergeOnMobile} />
                  ))
                ) : (
                  socialLinks.map((item) => (
                    <NavItem type="social" {item} {mergeOnMobile} />
                  ))
                )
              )}
            </div>
          )}
        </>
      )
    }
  </nav>
</header>
